{"version":3,"sources":["reportWebVitals.ts","control/router.ts","control/appStorage.ts","control/controller.ts","view/loggedOut.ts","view/style.ts","control/loggedOut.ts","control/storageObject.ts","model/date.ts","gen/projectInfo.ts","view/main.ts","view/calendar.ts","control/calendar.ts","control/main.ts","view/login.ts","control/login.ts","view/register.ts","model/user.ts","control/register.ts","view/loggedIn.ts","control/loggedIn.ts","view/diary.ts","model/diaryNote.ts","view/diaryNotebook.ts","control/diaryNotebook.ts","control/diary.ts","control/logout.ts","view/changeStyle.ts","control/changeStyle.ts","model/note.ts","control/app.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Router","routes","defaultRoute","_routes","_defaultRoute","_actualRoute","window","addEventListener","e","route","this","routeFound","hash","location","Object","entries","routeName","routeControl","init","routeDefault","newRoute","console","log","name","control","AppStorage","storedClasses","data","forEach","storedClass","getStorageClassName","rawData","localStorage","getItem","save","JSON","parse","key","value","newObject","_storageClassName","assign","setItem","stringify","Controller","app","_app","LoggedOutView","_navEl","_userEl","_user","document","querySelector","getElementById","selectedPage","innerHTML","_nav","String","raw","styles","blue","headerFooter","mainBg","text","mandatory","dark","note","noteBgHover","tableSelected","tableSelectedHover","tableButtonBg","error","green","setStyle","styleName","root","documentElement","style","setProperty","LoggedOut","_loggedOutView","router","getActualRoute","StorageObject","storageClassName","monthNames","dayNamesShots","CustomDate","day","month","year","Intl","DateTimeFormat","weekday","format","toDate","toString","getDayInWeek","Date","getDay","date","getMonth","getFullYear","getDate","getDayInWeekName","createDate","projectInfo","MainView","_headlineEl","_mainEl","_footerEl","_formEl","_headline","_footer","authorName","packageInfo","author","buildYear","buildDate","buildVersion","version","title","_basicCalendar","createCurrentDate","CalendarView","_calendarWrapperEl","_calendarBodyEl","selectedDay","noteDays","_calendar","_calendarBody","dayIndex","cell","classList","add","remove","getMonthName","join","getDayShorts","map","cells","_calendarCells","row","firstDayInMonth","dayInWeek","currentDate","daysInMonth","getDaysInMonth","j","i","length","push","_otherMonthCell","isSelected","_cell","includes","cellClass","arr","reduce","a","b","Calendar","_view","_selectedDay","_date","submitter","parseInt","deselectCell","selectCell","dencrementMonth","incrementMonth","Main","progress","getForm","preventDefault","submitForm","LoginView","_loginFormEl","_emailInputEl","_passwordInputEl","_errorEl","_loginForm","textContent","message","Login","_submitForm","email","getEmailInput","password","getPasswordInput","user","_findUser","doesPasswordMatch","matches","routeTo","setError","users","getUsers","getData","foundUser","RegisterView","_registerFormEl","_password1InputEl","_password2InputEl","_registerForm","User","passwordHash","notes","diaryNotes","createHash","indexOf","msgUint8","TextEncoder","encode","crypto","subtle","digest","hashBuffer","hashArray","Array","from","Uint8Array","hashHex","padStart","Register","_validateEmail","getPassword1Input","_validatePassword1","getPassword2Input","_validatePassword2","createWithPassword","clearErrors","isIncorrect","isEmailIncorrect","setEmailError","_isRegistered","password1","isPasswordIncorrect","setPassword1Error","setPassword2Error","isRegistered","LoggedInView","_emailEl","userEmail","LoggedIn","_loggedInView","DiaryView","_diary","DiaryNote","description","DiaryNoteView","_diaryNoteWrapperEl","_nameEl","_descriptionEl","_noneNote","_createNote","_initFormData","_changeNote","_existingNote","DiaryNotebook","calendar","update","getSelectedDay","clearNote","_findNote","noneNote","existingNote","makeCopy","filter","undefined","createNote","getNameInput","getDescriptionInput","isNameIncorrect","setNameError","isDescriptionIncorrect","setDescriptionError","createDiaryNote","index","findIndex","diaryNote","compare","changeNote","find","Diary","_diaryNote","Logout","ChangeStyleView","_changeStyleFormEl","_changeStyleForm","ChangeStyle","form","formData","FormData","rawStyle","rawStyleString","get","Note","App","_users","main","login","register","diary","logout","changeStyle","load","ReactDOM","render","StrictMode","href","id"],"mappings":"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","file":"static/js/main.ab1c9578.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Controller } from \"./controller\";\r\n\r\nexport type Routes = { [name: string]: Controller };\r\nexport type Route = { name: string, control: Controller };\r\n\r\nclass Router\r\n{\r\n    private _routes: Routes;\r\n    private _defaultRoute: Route;\r\n    private _actualRoute: string;\r\n\r\n    constructor(routes: Routes, defaultRoute: Route) {\r\n        window.addEventListener('popstate', e => this.route());\r\n        this._routes = routes;\r\n        this._defaultRoute = defaultRoute;\r\n        this._actualRoute = \"\";\r\n    }\r\n\r\n    getActualRoute() { // TODO: rethink getter\r\n        return this._actualRoute;\r\n    }\r\n\r\n    route() {\r\n        let routeFound = false;\r\n        const hash = window.location.hash;\r\n        for (const [routeName, routeControl] of Object.entries(this._routes)) {\r\n            if(\"#\" + routeName == hash) {\r\n                this._actualRoute = routeName;\r\n                if(routeControl.init()) {\r\n                    routeFound = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        if(!routeFound) {\r\n            this.routeDefault();\r\n        }\r\n    }\r\n\r\n    routeTo(newRoute: string) {\r\n        let routeFound = false;\r\n        for (const [routeName, routeControl] of Object.entries(this._routes)) {\r\n            if(routeName == newRoute) {\r\n                routeFound = true;\r\n            }\r\n        }\r\n        if(!routeFound) {\r\n            console.log(\"route %s does not exist\", newRoute);\r\n            return;\r\n        }\r\n        this._actualRoute = newRoute;\r\n        window.location.hash = \"#\" + newRoute;\r\n        this._routes[newRoute].init();\r\n    }\r\n\r\n    routeDefault() {\r\n        this._actualRoute = this._defaultRoute.name;\r\n        window.location.hash = \"#\" + this._defaultRoute.name;\r\n        this._defaultRoute.control.init();\r\n    }\r\n}\r\n\r\nexport { Router };","import { User } from \"../model/user\";\r\n\r\nclass AppStorage\r\n{\r\n    private name: string;\r\n    private storedClasses: any; // TODO: somehow remove any\r\n    private data: User[]; // TODO: is that correct?\r\n\r\n    constructor(name: string, storedClasses: any[]) { // TODO: rethink storedClasses any type\r\n        this.name = name;\r\n        this.storedClasses = {};\r\n        this.data = [];\r\n        storedClasses.forEach(storedClass => {\r\n            this.storedClasses[(new storedClass()).getStorageClassName()] = storedClass;\r\n        });\r\n    }\r\n\r\n    getData() { // TODO: rethink getter\r\n        return this.data;\r\n    }\r\n\r\n    load() {\r\n        let rawData = window.localStorage.getItem(this.name);\r\n        if(rawData == null) {\r\n            this.save();\r\n        } else {\r\n            this.data = JSON.parse(rawData, (key, value) => {\r\n                if(typeof value === 'object' && \"_storageClassName\" in value) {\r\n                    let newObject = new this.storedClasses[value._storageClassName]();\r\n                    return Object.assign(newObject, value);\r\n                }\r\n                else {\r\n                    return value;\r\n                }\r\n           });\r\n        }\r\n    }\r\n\r\n    save() {\r\n        window.localStorage.setItem(this.name, JSON.stringify(this.data));\r\n    }\r\n}\r\n\r\nexport { AppStorage };","import { App } from \"./app\"\r\n\r\nclass Controller\r\n{\r\n    protected _app: App;\r\n\r\n    constructor(app: App) {\r\n        this._app = app;\r\n    }\r\n\r\n    init() {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { Controller };","\r\nclass LoggedOutView\r\n{\r\n    private _navEl: any;\r\n    private _userEl: any;\r\n    private _user: string;\r\n\r\n    constructor(){\r\n        this._navEl = document.querySelector(\"header nav\");\r\n        this._userEl = document.getElementById(\"user\");\r\n\r\n        this._user = \"\";\r\n    }\r\n\r\n    init(selectedPage: string) {\r\n        this._navEl.innerHTML = this._nav(selectedPage);\r\n        this._userEl.innerHTML = this._user;\r\n    }\r\n\r\n    private _nav (selectedPage: string) {\r\n        return String.raw`\r\n            <ul>\r\n                <li>\r\n                    <a href=\"#main\" ${selectedPage == \"main\" ? 'id=\"pageSelected\"' : \"\"}>Main page</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#login\" ${selectedPage == \"login\" ? 'id=\"pageSelected\"' : \"\"}>Login</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#register\" ${selectedPage == \"register\" ? 'id=\"pageSelected\"' : \"\"}>Register</a>\r\n                </li>\r\n            </ul>\r\n        `;\r\n    }\r\n}\r\n\r\nexport { LoggedOutView };","\r\nlet styles = {\r\n    blue: {\r\n        headerFooter: \"#12146b\",\r\n        mainBg: \"#191c94\",\r\n        text: \"white\",\r\n        mandatory: \"#ff4e00\",\r\n        dark: \"#070f3d\",\r\n        note: \"#070f3d\",\r\n        noteBgHover: \"#00a0d5\",\r\n        tableSelected: \"#1b62c2\",\r\n        tableSelectedHover: \"#14478c\",\r\n        tableButtonBg: \"#00a0d5\",\r\n        error: \"#ff4e00\"\r\n    },\r\n    green: {\r\n        headerFooter: \"#239311\",\r\n        mainBg: \"#30cf16\",\r\n        text: \"black\",\r\n        mandatory: \"#bd0000\",\r\n        dark: \"#0f3d07\",\r\n        note: \"#053007\",\r\n        noteBgHover: \"#46ee4e\",\r\n        tableSelected: \"#108d16\",\r\n        tableSelectedHover: \"#0b5b0e\",\r\n        tableButtonBg: \"#46ee4e\",\r\n        error: \"#bd0000\"\r\n    }\r\n};\r\n\r\nfunction setStyle(styleName: \"blue\" | \"green\") {\r\n    let root = document.documentElement;\r\n    let style = styles[styleName];\r\n    root.style.setProperty(\"--header-footer-color\", style.headerFooter);\r\n    root.style.setProperty(\"--main-bg-color\", style.mainBg);\r\n    root.style.setProperty(\"--text-color\", style.text);\r\n    root.style.setProperty(\"--mandatory-color\", style.mandatory);\r\n    root.style.setProperty(\"--dark-color\", style.dark);\r\n    root.style.setProperty(\"--note-color\", style.note);\r\n    root.style.setProperty(\"--note-bg-color-hover\", style.noteBgHover);\r\n    root.style.setProperty(\"--table-selected-color\", style.tableSelected);\r\n    root.style.setProperty(\"--table-selected-hover-color\", style.tableSelectedHover);\r\n    root.style.setProperty(\"--table-button-bg-color\", style.tableButtonBg);\r\n    root.style.setProperty(\"--error-color\", style.error);\r\n}\r\n\r\nexport { setStyle };","import { App } from \"./app\"\r\nimport { Controller } from \"./controller\";\r\nimport { LoggedOutView } from \"../view/loggedOut\";\r\nimport { setStyle } from \"../view/style\";\r\n\r\nclass LoggedOut extends Controller\r\n{\r\n    private _loggedOutView: LoggedOutView;\r\n    \r\n    constructor(app: App) {\r\n        super(app);\r\n        this._loggedOutView = new LoggedOutView();\r\n    }\r\n\r\n    init() {\r\n        setStyle(\"blue\");\r\n        this._loggedOutView.init(this._app.router.getActualRoute());\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { LoggedOut };","\r\nclass StorageObject\r\n{\r\n    private _storageClassName: string; // TODO: rethink mutability\r\n\r\n    constructor(storageClassName : string) {\r\n        this._storageClassName = storageClassName;\r\n    }\r\n\r\n    getStorageClassName() { // TODO: rethink getter\r\n        return this._storageClassName;\r\n    }\r\n}\r\n\r\nexport { StorageObject };","import { StorageObject } from \"../control/storageObject\";\r\n\r\nlet monthNames =\r\n[\r\n    \"January\",\r\n    \"Febuary\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n];\r\n\r\nlet dayNames = [\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Fiday\",\r\n    \"Saturday\",\r\n    \"Sunday\"\r\n];\r\n\r\nlet dayNamesShots = [\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n    \"Su\"\r\n];\r\n\r\n// TODO: maybe do the attributes typesafe, but that would be hard, so maybe change access rights and maybe mutability\r\nclass CustomDate extends StorageObject \r\n{\r\n    public day = 1;\r\n    public month = 1;\r\n    public year = 1;\r\n\r\n    constructor() {\r\n        super(\"Date\");\r\n    }\r\n\r\n    static createDate(day: number, month: number, year: number) {\r\n        let date = new CustomDate();\r\n        date.day = day;\r\n        date.month = month;\r\n        date.year = year;\r\n        return date;\r\n    }\r\n\r\n    static createCurrentDate() {\r\n        let date = new Date();\r\n        return this.createDate(date.getDate(), date.getMonth(), date.getFullYear());\r\n    }\r\n\r\n    static getDayShorts() {\r\n        return dayNamesShots;\r\n    }\r\n\r\n    getMonthName() {\r\n        return monthNames[this.month];\r\n    }\r\n\r\n    getDayInWeekName() {\r\n        var options: any = { weekday: 'long'}; // TODO: just double check if it could be resolved without any\r\n        return new Intl.DateTimeFormat('en-US', options).format(this.toDate()).toString();\r\n    }\r\n\r\n    getDayInWeekShortName() {\r\n        return dayNamesShots[this.getDayInWeek()];\r\n    }\r\n\r\n    getDayInWeek() {\r\n        let date = new Date(this.year, this.month, this.day);\r\n        return date.getDay();\r\n    }\r\n\r\n    getDaysInMonth() {\r\n        let date = new Date();\r\n        let month = date.getMonth() + 1;\r\n        let year = date.getFullYear();\r\n        return new Date(year, month, 0).getDate();\r\n    }\r\n\r\n    incrementMonth() {\r\n        let date = new Date(this.year, this.month + 1, 1);\r\n        this.year = date.getFullYear();\r\n        this.month = date.getMonth();\r\n        this.day = date.getDate();\r\n    }\r\n\r\n    dencrementMonth() {\r\n        let date = new Date(this.year, this.month - 1, 1);\r\n        this.year = date.getFullYear();\r\n        this.month = date.getMonth();\r\n        this.day = date.getDate();\r\n    }\r\n\r\n    toDate() {\r\n        return new Date(this.year, this.month, this.day);\r\n    }\r\n\r\n    toString() {\r\n        return this.getDayInWeekName()+\" \"+String(this.day)+\". \"+monthNames[this.month]+\" \"+String(this.year);\r\n    }\r\n\r\n    compare(date: CustomDate) {\r\n        return this.day == date.day && this.month == date.month && this.year == date.year;\r\n    }\r\n\r\n    makeCopy() {\r\n        return CustomDate.createDate(this.day, this.month, this.year);\r\n    }\r\n}\r\n\r\nexport { CustomDate };","\n// WARNING: Don't make changes to this file. It will be generated automatically with each build.\nconst projectInfo = {\n\"buildDate\": new Date(2021, 9, 2),\n\"packageInfo\": {\n  \"name\": \"diary-js\",\n  \"homepage\": \"http://shetr.github.io/diary-js\",\n  \"version\": \"1.1.4\",\n  \"description\": \"Reworked version of zwa-diary-js.\",\n  \"main\": \"src/index.tsx\",\n  \"author\": {\n    \"name\": \"Petr Šádek\",\n    \"email\": \"shetr.git@gmail.com\"\n  },\n  \"dependencies\": {\n    \"@testing-library/jest-dom\": \"^5.14.1\",\n    \"@testing-library/react\": \"^11.2.7\",\n    \"@testing-library/user-event\": \"^12.8.3\",\n    \"@types/jest\": \"^26.0.24\",\n    \"@types/node\": \"^12.20.27\",\n    \"@types/react\": \"^17.0.26\",\n    \"@types/react-dom\": \"^17.0.9\",\n    \"gh-pages\": \"^3.2.3\",\n    \"react\": \"^17.0.2\",\n    \"react-dom\": \"^17.0.2\",\n    \"react-scripts\": \"4.0.3\",\n    \"typescript\": \"^4.4.3\",\n    \"web-vitals\": \"^1.1.2\"\n  },\n  \"scripts\": {\n    \"gen\": \"node scripts/gen-project-info.js src/gen/projectInfo.ts\",\n    \"start\": \"react-scripts start\",\n    \"build\": \"npm run gen && react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"deploy\": \"gh-pages -d build\",\n    \"build-deploy\": \"npm run build && npm run deploy\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"react-app\",\n      \"react-app/jest\"\n    ]\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n\n};\nexport { projectInfo };\n        ","import { CustomDate } from \"../model/date\";\r\nimport { projectInfo } from \"../gen/projectInfo\";\r\n\r\nclass MainView\r\n{\r\n    private _headlineEl: any;\r\n    private _mainEl: any;\r\n    private _footerEl: any;\r\n    private _formEl: any;\r\n    private _headline: string;\r\n    private _footer: string;\r\n\r\n    constructor(){\r\n        this._headlineEl = document.querySelector(\"header h1\");\r\n        this._mainEl = document.querySelector(\"main\");\r\n        this._footerEl = document.querySelector(\"footer\");\r\n\r\n        this._formEl = null;\r\n\r\n        this._headline = \"Diary\";\r\n        let authorName = projectInfo.packageInfo.author.name;\r\n        let buildYear = projectInfo.buildDate.getFullYear();\r\n        let buildVersion = projectInfo.packageInfo.version;\r\n        this._footer = `${buildYear}&nbsp;&nbsp;&nbsp;${authorName}&nbsp;&nbsp;&nbsp;v${buildVersion}`;\r\n    }\r\n\r\n    getForm() {\r\n        return this._formEl;\r\n    }\r\n\r\n    init() {\r\n        this._headlineEl.innerHTML = this._headline;\r\n        document.title = this._headline;\r\n        this._footerEl.innerHTML = this._footer;\r\n        \r\n        this._mainEl.innerHTML = this._basicCalendar();\r\n\r\n        this._formEl = document.querySelector(\"form\");\r\n    }\r\n\r\n    private _basicCalendar() {\r\n        let date = CustomDate.createCurrentDate();\r\n        return String.raw`\r\n            <div id=\"currentDate\">Today is ${date.toString()}</div>\r\n            <form method=\"post\" action=\"\">\r\n                <div id=\"calendar\"></div>\r\n            </form>\r\n        `;\r\n    }\r\n}\r\n\r\nexport { MainView };","import { CustomDate } from \"../model/date\";\r\n\r\nclass CalendarView\r\n{\r\n    private _calendarWrapperEl: any;\r\n    private _calendarBodyEl: any;\r\n\r\n    constructor(){\r\n        this._calendarWrapperEl = null;\r\n        this._calendarBodyEl = null;\r\n    }\r\n\r\n    init(date: CustomDate, selectedDay: number, noteDays: number[]) {\r\n\r\n        this._calendarWrapperEl = document.getElementById(\"calendar\");\r\n        this._calendarWrapperEl.innerHTML = this._calendar(date);\r\n\r\n        this._calendarBodyEl = document.querySelector(\"tbody\");\r\n        this._calendarBodyEl.innerHTML = this._calendarBody(date, selectedDay, noteDays);\r\n    }\r\n\r\n    selectCell(dayIndex: number) {\r\n        let cell = document.getElementById(\"day\"+String(dayIndex));\r\n        if(cell != null) {\r\n            cell.classList.add(\"selectedTab\");\r\n        }\r\n    }\r\n\r\n    deselectCell(dayIndex: number) {\r\n        let cell = document.getElementById(\"day\"+String(dayIndex));\r\n        if(cell != null) {\r\n            cell.classList.remove(\"selectedTab\");\r\n        }\r\n    }\r\n\r\n    private _calendar(date: CustomDate) {\r\n        return String.raw`\r\n            <table>\r\n                <thead>\r\n                <tr> \r\n                    <td colspan=\"5\">\r\n                        <div class=\"buttonTab\">\r\n                            ${date.getMonthName()} ${date.year}\r\n                        </div>\r\n                    </td> \r\n                    <td>\r\n                        <input class=\"buttonTab\" type=\"submit\" name=\"changeMonthLeft\" value=\"<\">\r\n                    </td> \r\n                    <td>\r\n                        <input class=\"buttonTab\" type=\"submit\" name=\"changeMonthRight\" value=\">\">\r\n                    </td> \r\n                </tr>\r\n                <tr>\r\n                    ${join(CustomDate.getDayShorts().map((day) => String.raw`\r\n                        <td>\r\n                            <div>\r\n                                ${day}\r\n                            </div>\r\n                        </td>\r\n                    `))}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    \r\n                </tbody>\r\n            </table>\r\n        `;\r\n    }\r\n\r\n    private _calendarBody(date: CustomDate, selectedDay: number, noteDays: number[]) {\r\n        let cells = this._calendarCells(date, selectedDay, noteDays);\r\n        return String.raw`\r\n            ${join(cells.map((row) => String.raw`\r\n\t            <tr>\r\n                    ${join(row)}\r\n                </tr>\r\n            `))}\r\n        `;\r\n    }\r\n\r\n    private _calendarCells(date: CustomDate, selectedDay: number, noteDays: number[]) {\r\n        let firstDayInMonth = CustomDate.createDate(1, date.month, date.year);\r\n        let dayInWeek = firstDayInMonth.getDayInWeek();\r\n        \r\n        let currentDate = CustomDate.createCurrentDate(); \r\n        \r\n        let cells = [];\r\n        \r\n        let daysInMonth = firstDayInMonth.getDaysInMonth();\r\n        let j = 2 - dayInWeek;\r\n        while(daysInMonth > 0)\r\n        {\r\n            let row = [];\r\n            for(let i = 0; i < CustomDate.getDayShorts().length; i++)\r\n            {\r\n                if(j < 1 || daysInMonth <= 0)\r\n                {\r\n                    row.push(this._otherMonthCell());\r\n                }\r\n                else\r\n                {\r\n                    let isSelected = false;\r\n                    if(selectedDay == j) {\r\n                        isSelected = true;\r\n                    }\r\n                    if(j == currentDate.day && date.month == currentDate.month && date.year == currentDate.year) {\r\n                        row.push(this._cell(isSelected, \"todayTab\", j));\r\n                    }\r\n                    else if(noteDays.includes(j)) {\r\n                        row.push(this._cell(isSelected, \"noteTab\", j));\r\n                    }\r\n                    else {\r\n                        row.push(this._cell(isSelected, \"activeCellTab\", j));\r\n                    }\r\n                    daysInMonth--;\r\n                }\r\n                j++;\r\n            }\r\n            cells.push(row);\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    private _cell(isSelected: boolean, cellClass: \"todayTab\" | \"noteTab\" | \"activeCellTab\", dayIndex: number) {\r\n        return String.raw`\r\n            <td id=\"day${dayIndex}\" ${isSelected ? 'class =\"selectedTab\"' : \"\"}>\r\n                    <input class=\"${cellClass}\" type=\"submit\" name=\"selectDay\" value=\"${dayIndex}\">\r\n            </td>\r\n        `;\r\n    }\r\n\r\n    private _otherMonthCell() {\r\n        return String.raw`\r\n            <td>\r\n                <div class=\"deactivatedCellTab\">\r\n                    <svg width=\"20\" height=\"20\" viewBox=\"0 0 10 10\">\r\n                        <line x1=\"0\" y1=\"0\" x2=\"10\" y2=\"10\"/>\r\n                        <line x1=\"0\" y1=\"10\" x2=\"10\" y2=\"0\"/>\r\n                    </svg>\r\n                </div>\r\n            </td>\r\n        `;\r\n    }\r\n}\r\n\r\nfunction join(arr: string[]) {\r\n    return arr.reduce((a, b) => a+b, \"\");\r\n}\r\n\r\nexport { CalendarView };","import { App } from \"./app\"\r\nimport { Controller } from \"./controller\";\r\nimport { CalendarView } from \"../view/calendar\";\r\nimport { CustomDate } from \"../model/date\";\r\n\r\nclass Calendar extends Controller\r\n{\r\n    public noteDays: number[];\r\n    private _view: CalendarView;\r\n    private _selectedDay: number;\r\n    private _date: CustomDate;\r\n\r\n    constructor(app: App) {\r\n        super(app);\r\n        this._view = new CalendarView();\r\n        this._selectedDay = -1;\r\n        this._date = new CustomDate;\r\n        this.noteDays = [];\r\n    }\r\n\r\n    init() {\r\n        this._selectedDay = -1;\r\n        this._date = CustomDate.createCurrentDate();\r\n        this._view.init(this._date, this._selectedDay, this.noteDays);\r\n        return true;\r\n    }\r\n\r\n    update() {\r\n        this._view.init(this._date, this._selectedDay, this.noteDays);\r\n    }\r\n\r\n    getSelectedDay() {\r\n        return this._selectedDay;\r\n    }\r\n\r\n    getDate() {\r\n        return this._date;\r\n    }\r\n\r\n    submitForm(submitter: any) { // TODO: replace any with some type\r\n        if(submitter.name == \"selectDay\") {\r\n            let selectedDay = parseInt(submitter.value);\r\n            this._view.deselectCell(this._selectedDay);\r\n            this._view.selectCell(selectedDay);\r\n            this._selectedDay = selectedDay;\r\n            this._date.day = selectedDay;\r\n        } else if(submitter.name == \"changeMonthLeft\") {\r\n            this._selectedDay = -1;\r\n            this._date.dencrementMonth();\r\n            this._view.init(this._date, this._selectedDay, this.noteDays);\r\n        } else if(submitter.name == \"changeMonthRight\") {\r\n            this._selectedDay = -1;\r\n            this._date.incrementMonth();\r\n            this._view.init(this._date, this._selectedDay, this.noteDays);\r\n        }\r\n    }\r\n}\r\n\r\nexport { Calendar };","import { App } from \"./app\"\r\nimport { LoggedOut } from \"./loggedOut\";\r\nimport { MainView } from \"../view/main\";\r\nimport { Calendar } from \"./calendar\";\r\n\r\nclass Main extends LoggedOut\r\n{\r\n    private _view: MainView;\r\n    private _calendar: Calendar;\r\n\r\n    constructor(app: App) {\r\n        super(app);\r\n        this._view = new MainView();\r\n        this._calendar = new Calendar(app);\r\n    }\r\n\r\n    init() {\r\n        let progress = super.init();\r\n        if(progress) {\r\n            this._view.init();\r\n            this._calendar.init();\r\n            let form = this._view.getForm();\r\n            form.addEventListener(\"submit\", (e: SubmitEvent) => {e.preventDefault(); this._calendar.submitForm(e.submitter);});\r\n        }\r\n        return progress;\r\n    }\r\n}\r\n\r\nexport { Main };","\r\nclass LoginView\r\n{\r\n    private _headlineEl: any;\r\n    private _mainEl: any;\r\n    private _loginFormEl: any;\r\n    private _emailInputEl: any;\r\n    private _passwordInputEl: any;\r\n    private _errorEl: any;\r\n    private _headline: string;\r\n\r\n    constructor(){\r\n        this._headlineEl = document.querySelector(\"header h1\");\r\n        this._mainEl = document.querySelector(\"main\");\r\n\r\n        this._loginFormEl = null;\r\n        this._emailInputEl = null;\r\n        this._passwordInputEl = null;\r\n        this._errorEl = null;\r\n\r\n        this._headline = \"Login\";\r\n    }\r\n\r\n    init() {\r\n        this._headlineEl.innerHTML = this._headline;\r\n        document.title = this._headline;\r\n        \r\n        this._mainEl.innerHTML = this._loginForm();\r\n\r\n        this._loginFormEl = document.querySelector(\"form\");\r\n        this._emailInputEl = document.getElementById(\"email\");\r\n        this._passwordInputEl = document.getElementById(\"password\");\r\n        this._errorEl = document.querySelector(\"p.error\");\r\n    }\r\n\r\n    getForm() {\r\n        return this._loginFormEl;\r\n    }\r\n    getEmailInput() {\r\n        return this._emailInputEl;\r\n    }\r\n    getPasswordInput() {\r\n        return this._passwordInputEl;\r\n    }\r\n\r\n    clearErrors() {\r\n        this._errorEl.textContent = \"\";\r\n    }\r\n    setError(message: string) {\r\n        this._errorEl.textContent = message;\r\n    }\r\n\r\n    private _loginForm() {\r\n        return String.raw`\r\n            <form method=\"post\" action=\"\">\r\n                <label>\r\n                    Email: <span class=\"mandatory\">*</span>\r\n                    <input id=\"email\" required type=\"email\" name=\"email\"/>\r\n                </label>\r\n                <label>\r\n                    Password: <span class=\"mandatory\">*</span>\r\n                    <input id=\"password\" required type=\"password\" name=\"password\" />\r\n                </label>\r\n                <p class=\"error\"></p>\r\n                <input class=\"submitForm\" type=\"submit\" value=\"Login\">\r\n                <p> Fields with <span class=\"mandatory\">*</span> are mandatory. </p>\r\n            </form>\r\n        `;\r\n    }\r\n}\r\n\r\nexport { LoginView };","import { App } from \"./app\"\r\nimport { LoginView } from \"../view/login\";\r\nimport { LoggedOut } from \"./loggedOut\";\r\nimport { User } from \"../model/user\";\r\n\r\nclass Login extends LoggedOut\r\n{\r\n    private _view: LoginView;\r\n\r\n    constructor(app: App) {\r\n        super(app);\r\n        this._view = new LoginView();\r\n    }\r\n\r\n    init() {\r\n        let progress = super.init();\r\n        if(progress) {\r\n            this._view.init();\r\n            this._view.getForm().addEventListener(\"submit\", (e: SubmitEvent) => {e.preventDefault(); this._submitForm();});\r\n        }\r\n        return progress;\r\n    }\r\n\r\n    private _submitForm() {\r\n        let email = this._view.getEmailInput().value;\r\n        let password = this._view.getPasswordInput().value;\r\n        let user = this._findUser(email);\r\n        if(user == null) {\r\n            this._view.setError(\"Incorrect email or password.\");\r\n            return;\r\n        }\r\n        user.doesPasswordMatch(password).then((matches) => {\r\n            if(!matches) {\r\n                this._view.setError(\"Incorrect email or password.\");\r\n                return;\r\n            }\r\n            this._app.user = user;\r\n            this._app.router.routeTo(\"diary\");\r\n        });\r\n    }\r\n\r\n    private _findUser(email: string): User | null {\r\n        let users = this._app.getUsers().getData();\r\n        let foundUser = null;\r\n        users.forEach((user) => {\r\n            if(user.email == email) {\r\n                foundUser = user;\r\n            }\r\n        });\r\n        return foundUser;\r\n    }\r\n}\r\n\r\nexport { Login };","\r\nclass RegisterView\r\n{\r\n    private _headlineEl: any;\r\n    private _mainEl: any;\r\n    private _registerFormEl: any;\r\n    private _emailInputEl: any;\r\n    private _password1InputEl: any;\r\n    private _password2InputEl: any;\r\n    private _errorEl: any;\r\n    private _headline: string;\r\n\r\n    constructor(){\r\n        this._headlineEl = document.querySelector(\"header h1\");\r\n        this._mainEl = document.querySelector(\"main\");\r\n\r\n        this._registerFormEl = null;\r\n        this._emailInputEl = null;\r\n        this._password1InputEl = null;\r\n        this._password2InputEl = null;\r\n        this._errorEl = null;\r\n\r\n        this._headline = \"Register\";\r\n    }\r\n\r\n    init() {\r\n        this._headlineEl.innerHTML = this._headline;\r\n        document.title = this._headline;\r\n        \r\n        this._mainEl.innerHTML = this._registerForm();\r\n\r\n        this._registerFormEl = document.querySelector(\"form\");\r\n        this._emailInputEl = document.getElementById(\"email\");\r\n        this._password1InputEl = document.getElementById(\"password1\");\r\n        this._password2InputEl = document.getElementById(\"password2\");\r\n        this._errorEl = document.querySelector(\"p.error\");\r\n    }\r\n\r\n    getForm() {\r\n        return this._registerFormEl;\r\n    }\r\n    getEmailInput() {\r\n        return this._emailInputEl;\r\n    }\r\n    getPassword1Input() {\r\n        return this._password1InputEl;\r\n    }\r\n    getPassword2Input() {\r\n        return this._password2InputEl;\r\n    }\r\n\r\n\r\n    clearErrors() {\r\n        this._errorEl.textContent = \"\";\r\n        this._emailInputEl.classList.remove('error');\r\n        this._password1InputEl.classList.remove('error');\r\n        this._password2InputEl.classList.remove('error');\r\n    }\r\n    setEmailError(message: string) {\r\n        this._errorEl.textContent = message;\r\n        this._emailInputEl.classList.add('error');\r\n    }\r\n    setPassword1Error(message: string) {\r\n        this._errorEl.textContent = message;\r\n        this._password1InputEl.classList.add('error');\r\n    }\r\n    setPassword2Error(message: string) {\r\n        this._errorEl.textContent = message;\r\n        this._password2InputEl.classList.add('error');\r\n    }\r\n\r\n    private _registerForm() {\r\n        return String.raw`\r\n            <form method=\"post\" action=\"\">\r\n                <label>\r\n                    Email: <span class=\"mandatory\">*</span>\r\n                    <input id=\"email\" required type=\"email\" name=\"email\"/>\r\n                </label>\r\n                <label>\r\n                    Password: <span class=\"mandatory\">*</span>\r\n                    <input id=\"password1\" required type=\"password\" name=\"password1\" />\r\n                </label>\r\n                <label>\r\n                    Password check: <span class=\"mandatory\">*</span>\r\n                    <input id=\"password2\" required type=\"password\" name=\"password2\" />\r\n                </label>\r\n                <p class=\"error\"></p>\r\n                <input class=\"submitForm\" type=\"submit\" value=\"Register\">\r\n                <p> Fields with <span class=\"mandatory\">*</span> are mandatory. </p>\r\n            </form>\r\n        `;\r\n    }\r\n}\r\n\r\nexport { RegisterView };","import { StorageObject } from \"../control/storageObject\";\r\nimport { DiaryNote } from \"./diaryNote\";\r\nimport { Note } from \"./note\";\r\n\r\nexport type UserStyle = \"blue\" | \"green\";\r\n\r\nexport class User extends StorageObject // TODO: change visibility and mutability of attributes\r\n{\r\n    public email = \"\";\r\n    public passwordHash = \"\"; // TODO: maybe replace with some PasswordHash type\r\n    public notes: Note[] = [];\r\n    public diaryNotes: DiaryNote[] = [];\r\n    public style: UserStyle = \"blue\";\r\n\r\n    constructor() {\r\n        super(\"User\");\r\n    }\r\n\r\n    async doesPasswordMatch(password: string) {\r\n        let passwordHash = await createHash(password);\r\n        return this.passwordHash == passwordHash;\r\n    }\r\n\r\n    static async createWithPassword(email: string, password: string) {\r\n        let user = new User();\r\n        user.email = email;\r\n        user.passwordHash = await createHash(password); \r\n        return user;\r\n    }\r\n\r\n    static isEmailIncorrect(email: string) { // TODO: replace with typesafe Email type\r\n        if(!(email.indexOf(\"@\") > -1 && email.indexOf(\".\") > -1))\r\n        {\r\n            return \"Missing @ or . in the email.\";\r\n        }\r\n        if(!(email.indexOf(\"@\") > 0 && email.indexOf(\".\") > email.indexOf(\"@\") + 1 && email.indexOf(\".\") < email.length - 1))\r\n        {\r\n            return \"Incorrect email.\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    static isPasswordIncorrect(password: string) { // TODO: replace with typesafe Password type\r\n        if(password.length <= 3)\r\n        {\r\n            return 'Password must be longer than 3 characters.';\r\n        }\r\n        return \"\";\r\n    }\r\n}\r\n    \r\nasync function createHash(password: string) {\r\n    // copied from mdn\r\n    const msgUint8 = new TextEncoder().encode(password);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8).then();\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    return hashHex;\r\n}","import { App } from \"./app\"\r\nimport { LoggedOut } from \"./loggedOut\";\r\nimport { RegisterView } from \"../view/register\";\r\nimport { User } from \"../model/user\";\r\n\r\nclass Register extends LoggedOut\r\n{\r\n    private _view: RegisterView;\r\n\r\n    constructor(app: App) {\r\n        super(app);\r\n        this._view = new RegisterView();\r\n    }\r\n\r\n    init() {\r\n        let progress = super.init();\r\n        if(progress) {\r\n            this._view.init();\r\n            this._view.getForm().addEventListener(\"submit\", (e: SubmitEvent) => {e.preventDefault(); this._submitForm();});\r\n            this._view.getEmailInput().addEventListener(\"keyup\", (e: KeyboardEvent) => {e.preventDefault(); this._validateEmail();});\r\n            this._view.getPassword1Input().addEventListener(\"blur\", (e: FocusEvent) => {e.preventDefault(); this._validatePassword1();});\r\n            this._view.getPassword2Input().addEventListener(\"blur\", (e: FocusEvent) => {e.preventDefault(); this._validatePassword2();});\r\n        }\r\n        return progress;\r\n    }\r\n\r\n    private _submitForm() {\r\n        let isValid =\r\n            this._validatePassword2() &&\r\n            this._validatePassword1() &&\r\n            this._validateEmail();\r\n        if(isValid) {\r\n            let email = this._view.getEmailInput().value;\r\n            let password = this._view.getPassword1Input().value;\r\n            let users = this._app.getUsers();\r\n            User.createWithPassword(email, password).then((user => {\r\n                users.getData().push(user);\r\n                users.save();\r\n                this._app.user = user;\r\n                this._app.router.routeTo(\"diary\");\r\n            }));\r\n        }\r\n    }\r\n\r\n    private _validateEmail() {\r\n        this._view.clearErrors();\r\n        let email = this._view.getEmailInput().value;\r\n        let isIncorrect = User.isEmailIncorrect(email);\r\n        if(isIncorrect) {\r\n            this._view.setEmailError(isIncorrect);\r\n            return false;\r\n        }\r\n        if(this._isRegistered(email)){\r\n            this._view.setEmailError(\"Such a user already exists.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private _validatePassword1() {\r\n        this._view.clearErrors();\r\n        let password1 = this._view.getPassword1Input().value;\r\n        let isIncorrect = User.isPasswordIncorrect(password1);\r\n        if(isIncorrect) {\r\n            this._view.setPassword1Error(isIncorrect);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private _validatePassword2() {\r\n        this._view.clearErrors();\r\n        let password1 = this._view.getPassword1Input().value;\r\n        let password2 = this._view.getPassword2Input().value;\r\n        if(password1 != password2) {\r\n            this._view.setPassword2Error(\"Passwords do not match.\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private _isRegistered(email: string) {\r\n        let users = this._app.getUsers().getData();\r\n        let isRegistered = false;\r\n        users.forEach((user) => {\r\n            if(user.email == email) {\r\n                isRegistered = true;\r\n            }\r\n        });\r\n        return isRegistered;\r\n    }\r\n}\r\n\r\nexport { Register };","\r\nclass LoggedInView\r\n{\r\n    private _navEl: any;\r\n    private _userEl: any;\r\n    private _emailEl: any;\r\n\r\n    constructor(){\r\n        this._navEl = document.querySelector(\"header nav\");\r\n        this._userEl = document.getElementById(\"user\");\r\n\r\n        this._emailEl = null;\r\n    }\r\n\r\n    init(selectedPage: string, userEmail: string) {\r\n        this._navEl.innerHTML = this._nav(selectedPage);\r\n        this._userEl.innerHTML = this._user();\r\n\r\n        this._emailEl = document.getElementById(\"loggedInUserEmail\");\r\n        this._emailEl.textContent = userEmail;\r\n    }\r\n\r\n    private _nav (selectedPage: string) {\r\n        return String.raw`\r\n            <ul>\r\n                <li>\r\n                    <a href=\"#diary\" ${selectedPage == \"diary\" ? 'id=\"pageSelected\"' : \"\"}>Diary</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#changeStyle\" ${selectedPage == \"changeStyle\" ? 'id=\"pageSelected\"' : \"\" }>Change style</a>\r\n                </li>\r\n            </ul>\r\n        `;\r\n    }\r\n\r\n    private _user() {\r\n        return String.raw`\r\n            <div>\r\n                Logged&nbsp;in:&nbsp;<span id=\"loggedInUserEmail\"></span>\r\n            </div>\r\n            <div class=\"styleLink\">\r\n                <a class=\"navLink\" href=\"#logout\">Logout</a>\r\n            </div>\r\n        `;\r\n    }\r\n}\r\n\r\nexport { LoggedInView };","import { App } from \"./app\"\r\nimport { Controller } from \"./controller\";\r\nimport { LoggedInView } from \"../view/loggedIn\";\r\nimport { setStyle } from \"../view/style\";\r\nimport { User } from \"../model/user\";\r\n\r\nclass LoggedIn extends Controller\r\n{\r\n    private _loggedInView: LoggedInView;\r\n    protected _user: User;\r\n\r\n    constructor(app: App) {\r\n        super(app);\r\n        this._loggedInView = new LoggedInView();\r\n        this._user = new User()\r\n    }\r\n\r\n    init() {\r\n        let user = this._app.user;\r\n        if(user == null) {\r\n            return false;\r\n        }\r\n        this._user = user;\r\n        setStyle(this._user.style);\r\n        this._loggedInView.init(this._app.router.getActualRoute(), this._user.email);\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { LoggedIn };","\r\nclass DiaryView\r\n{\r\n    private _headlineEl: any;\r\n    private _mainEl: any;\r\n    private _formEl: any;\r\n    private _headline: string;\r\n\r\n    constructor(){\r\n        this._headlineEl = document.querySelector(\"header h1\");\r\n        this._mainEl = document.querySelector(\"main\");\r\n\r\n        this._formEl = null;\r\n\r\n        this._headline = \"Diary\";\r\n    }\r\n\r\n    getForm() {\r\n        return this._formEl;\r\n    }\r\n\r\n    init() {\r\n        this._headlineEl.innerHTML = this._headline;\r\n        document.title = this._headline;\r\n        \r\n        this._mainEl.innerHTML = this._diary();\r\n\r\n        this._formEl = document.querySelector(\"form\");\r\n    }\r\n\r\n    private _diary() {\r\n        return String.raw`\r\n            <form method=\"post\" action=\"\">\r\n                <div id=\"calendar\"></div>\r\n                <div id=\"diaryNote\"></div>\r\n            </form>\r\n        `;\r\n    }\r\n}\r\n\r\nexport { DiaryView };","import { StorageObject } from \"../control/storageObject\";\r\nimport { CustomDate } from \"./date\"\r\n\r\nclass DiaryNote extends StorageObject // TODO: change visibility and mutability of attributes\r\n{\r\n    public date = new CustomDate();\r\n    public name = \"\";\r\n    public description = \"\";\r\n\r\n    constructor() {\r\n        super(\"DiaryNote\");\r\n    }\r\n    static createDiaryNote(date: CustomDate, name: string, description: string) {\r\n        let note = new DiaryNote();\r\n        note.date = date;\r\n        note.name = name;\r\n        note.description = description;\r\n        return note;\r\n    }\r\n\r\n    static isNameIncorrect(name: string) { // TODO: maybe replace with typesafe NoteName type\r\n        if(name.length > 100)\r\n            return \"The name is too long.\";\r\n        if(name.length < 1)\r\n            return \"The name must be at least one character.\";\r\n        return \"\";\r\n    }\r\n\r\n    static isDescriptionIncorrect(description: string) { // TODO: maybe replace with typesafe NoteDescription type\r\n        if(description.length > 20000)\r\n            return \"The description is too long.\";\r\n        return \"\";\r\n    }\r\n}\r\n\r\n\r\nexport { DiaryNote };","import { CustomDate } from \"../model/date\";\r\n\r\nclass DiaryNoteView\r\n{\r\n    private _diaryNoteWrapperEl: any;\r\n    private _nameEl: any;\r\n    private _descriptionEl: any;\r\n    private _errorEl: any;\r\n\r\n    constructor(){\r\n        this._diaryNoteWrapperEl = null;\r\n        this._nameEl = null;\r\n        this._descriptionEl = null;\r\n        this._errorEl = null;\r\n    }\r\n\r\n    init() {\r\n        this._diaryNoteWrapperEl = document.getElementById(\"diaryNote\");\r\n        this._diaryNoteWrapperEl.innerHTML = \"\";\r\n    }\r\n\r\n    clearNote() {\r\n        this._diaryNoteWrapperEl.innerHTML = \"\";\r\n    }\r\n    noneNote() {\r\n        this._diaryNoteWrapperEl.innerHTML = this._noneNote();\r\n    }\r\n    createNote() {\r\n        this._diaryNoteWrapperEl.innerHTML = this._createNote();\r\n        this._initFormData(\"\", \"\");\r\n        this._nameEl.addEventListener(\"blur\", (e: FocusEvent) => this.clearErrors());\r\n        this._descriptionEl.addEventListener(\"blur\", (e: FocusEvent) => this.clearErrors());\r\n    }\r\n    changeNote(name: string, description: string) {\r\n        this._diaryNoteWrapperEl.innerHTML = this._changeNote();\r\n        this._initFormData(name, description);\r\n        this._nameEl.addEventListener(\"blur\", (e: FocusEvent) => this.clearErrors());\r\n        this._descriptionEl.addEventListener(\"blur\", (e: FocusEvent) => this.clearErrors());\r\n    }\r\n    existingNote(name: string, description: string) {\r\n        this._diaryNoteWrapperEl.innerHTML = this._existingNote();\r\n        this._initFormData(name, description);\r\n    }\r\n    private _initFormData(name: string, description: string) {\r\n        this._nameEl = document.querySelector(\"input#name\");\r\n        this._descriptionEl = document.querySelector(\"textarea#description\");\r\n        this._errorEl = document.querySelector(\"p.error\");\r\n        this._nameEl.value = name;\r\n        this._descriptionEl.value = description;\r\n    }\r\n\r\n    getNameInput() {\r\n        return this._nameEl.value;\r\n    }\r\n    getDescriptionInput() {\r\n        return this._descriptionEl.value;\r\n    }\r\n\r\n\r\n    clearErrors() {\r\n        this._errorEl.textContent = \"\";\r\n        this._nameEl.classList.remove('error');\r\n        this._descriptionEl.classList.remove('error');\r\n    }\r\n    setNameError(message: string) {\r\n        this._errorEl.textContent = message;\r\n        this._nameEl.classList.add('error');\r\n    }\r\n    setDescriptionError(message: string) {\r\n        this._errorEl.textContent = message;\r\n        this._descriptionEl.classList.add('error');\r\n    }\r\n\r\n    private _noneNote() {\r\n        return String.raw`\r\n            <input class=\"submitForm\" type=\"submit\" name=\"createNote\" value=\"Create note\">\r\n        `;\r\n    }\r\n\r\n    private _createNote() {\r\n        return String.raw`\r\n            <label>\r\n                Name: <span class=\"mandatory\">*</span>\r\n                <input id=\"name\" type=\"text\" name=\"name\" value=\"\">\r\n            </label>\r\n            <label for=\"description\">\r\n                Description:\r\n            </label>\r\n            <textarea id=\"description\" id=\"description\" name=\"description\" cols=\"35\" rows=\"15\" ></textarea>\r\n            <p class=\"error\"></p>\r\n            <input class=\"submitForm\" type=\"submit\" name=\"create\" value=\"Create\">\r\n            <a class=\"submitForm\" href=\"javascript:window.print()\">Print</a>\r\n            <input class=\"submitForm\" type=\"submit\" name=\"cancel\" value=\"Cancel\">\r\n            <p> Fields with <span class=\"mandatory\">*</span> are mandatory. </p>\r\n        `;\r\n    }\r\n\r\n    private _changeNote() {\r\n        return String.raw`\r\n            <label>\r\n                Name: <span class=\"mandatory\">*</span>\r\n                <input id=\"name\" type=\"text\" name=\"name\" value=\"\">\r\n            </label>\r\n            <label for=\"description\">\r\n                Description:\r\n            </label>\r\n            <textarea id=\"description\" id=\"description\" name=\"description\" cols=\"35\" rows=\"15\" ></textarea>\r\n            <p class=\"error\"></p>\r\n            <input class=\"submitForm\" type=\"submit\" name=\"safeChanges\" value=\"Safe changes\">\r\n            <a class=\"submitForm\" href=\"javascript:window.print()\">Print</a>\r\n            <input class=\"submitForm\" type=\"submit\" name=\"cancel\" value=\"Cancel\">\r\n            <p> Fields with <span class=\"mandatory\">*</span> are mandatory. </p>\r\n        `;\r\n    }\r\n\r\n    private _existingNote() {\r\n        return String.raw`\r\n            <label>\r\n                Name:\r\n                <input id=\"name\" readonly type=\"text\" name=\"name\" value=\"\">\r\n            </label>\r\n            <label for=\"description\">\r\n                Description:\r\n            </label>\r\n            <textarea readonly id=\"description\" name=\"description\" cols=\"35\" rows=\"15\" ></textarea>\r\n            <div>\r\n                <input class=\"submitForm\" type=\"submit\" name=\"change\" value=\"Change\">\r\n                <a class=\"submitForm\" href=\"javascript:window.print()\">Print</a>\r\n                <input class=\"submitForm\" type=\"submit\" name=\"delete\" value=\"Delete\">\r\n            </div>\r\n        `;\r\n    }\r\n}\r\n\r\nexport { DiaryNoteView };","import { App } from \"./app\"\r\nimport { CustomDate } from \"../model/date\";\r\nimport { DiaryNote } from \"../model/diaryNote\";\r\nimport { DiaryNoteView } from \"../view/diaryNotebook\";\r\nimport { Calendar } from \"./calendar\";\r\nimport { User } from \"../model/user\";\r\n\r\nclass DiaryNotebook\r\n{\r\n    private _app: App;\r\n    private _view: DiaryNoteView;\r\n    private _calendar: Calendar;\r\n\r\n    constructor(app: App, calendar: Calendar) {\r\n        this._app = app;\r\n        this._view = new DiaryNoteView();\r\n        this._calendar = calendar;\r\n    }\r\n\r\n    init(user: User) {\r\n        this._view.init();\r\n        this.update(user);\r\n        return true;\r\n    }\r\n\r\n    update(user: User) {\r\n        let selectedDay = this._calendar.getSelectedDay();\r\n        if(selectedDay == -1) {\r\n            this._view.clearNote();\r\n        } else {\r\n            let note = this._findNote(user);\r\n            if(note == null) {\r\n                this._view.noneNote();\r\n            } else {\r\n                this._view.existingNote(note.name, note.description);\r\n            }\r\n        }\r\n        let date = this._calendar.getDate().makeCopy();\r\n        this._calendar.noteDays = user.diaryNotes\r\n            .filter(note => note.date.month == date.month)\r\n            .map(note => note.date.day);\r\n        if(this._calendar.noteDays == undefined) {\r\n            this._calendar.noteDays = [];\r\n        }\r\n        this._calendar.update();\r\n    }\r\n\r\n    submitForm(submitter: any, user: User) {  // TODO: replace any with some type\r\n        let selectedDay = this._calendar.getSelectedDay();\r\n        if(selectedDay == -1) {\r\n            this.update(user);\r\n            return;\r\n        }\r\n\r\n        if(submitter.name == \"createNote\") {\r\n            this._view.createNote();\r\n        }\r\n        else if(submitter.name == \"create\" || submitter.name == \"safeChanges\") {\r\n            let date = this._calendar.getDate().makeCopy();\r\n            let name = this._view.getNameInput();\r\n            let description = this._view.getDescriptionInput();\r\n            this._view.clearErrors();\r\n            let isIncorrect = DiaryNote.isNameIncorrect(name);\r\n            if(isIncorrect) {\r\n                this._view.setNameError(isIncorrect);\r\n                return;\r\n            }\r\n            isIncorrect = DiaryNote.isDescriptionIncorrect(description);\r\n            if(isIncorrect) {\r\n                this._view.setDescriptionError(isIncorrect);\r\n                return;\r\n            }\r\n            let note = DiaryNote.createDiaryNote(date.makeCopy(), name, description);\r\n            let diaryNotes = user.diaryNotes;\r\n            let index = diaryNotes.findIndex((diaryNote) => date.compare(diaryNote.date));\r\n            if(index < 0) {\r\n                diaryNotes.push(note);\r\n            } else {\r\n                diaryNotes[index] = note;\r\n            }\r\n            this._app.getUsers().save();\r\n            this.update(user);\r\n        }\r\n        else if(submitter.name == \"change\") {\r\n            let note = this._findNote(user);\r\n            if(note != null) {\r\n                this._view.changeNote(note.name, note.description);\r\n            }\r\n        }\r\n        else if(submitter.name == \"delete\") {\r\n            let date = this._calendar.getDate().makeCopy();\r\n            let diaryNotes = user.diaryNotes;\r\n            user.diaryNotes = diaryNotes.filter((diaryNote) => !diaryNote.date.compare(date));\r\n            this._app.getUsers().save();\r\n            this.update(user);\r\n        } else {\r\n            this.update(user);\r\n        }\r\n    }\r\n\r\n    _findNote(user: User) {\r\n        return user.diaryNotes.find((diaryNote) => this._calendar.getDate().compare(diaryNote.date));\r\n    }\r\n}\r\n\r\nexport { DiaryNotebook };","import { App } from \"./app\"\r\nimport { LoggedIn } from \"./loggedIn\";\r\nimport { DiaryView } from \"../view/diary\";\r\nimport { Calendar } from \"./calendar\";\r\nimport { DiaryNotebook } from \"./diaryNotebook\";\r\n\r\nclass Diary extends LoggedIn\r\n{\r\n    private _view: DiaryView;\r\n    private _calendar: Calendar;\r\n    private _diaryNote: DiaryNotebook;\r\n\r\n    constructor(app: App) {\r\n        super(app);\r\n        this._view = new DiaryView();\r\n        this._calendar = new Calendar(app);\r\n        this._diaryNote = new DiaryNotebook(app, this._calendar);\r\n    }\r\n\r\n    init() {\r\n        let progress = super.init();\r\n        if(progress) {\r\n            this._view.init();\r\n            this._calendar.init();\r\n            this._diaryNote.init(this._user);\r\n            let form = this._view.getForm();\r\n            form.addEventListener(\"submit\", (e: SubmitEvent) => {e.preventDefault(); this._submitForm(e.submitter);});\r\n        }\r\n        return progress;\r\n    }\r\n\r\n    _submitForm(submitter: any) { // TODO: replace any with some type\r\n        this._calendar.submitForm(submitter);\r\n        this._diaryNote.submitForm(submitter, this._user);\r\n    }\r\n}\r\n\r\nexport { Diary };","import { App } from \"./app\"\r\nimport { LoggedIn } from \"./loggedIn\";\r\n\r\nclass Logout extends LoggedIn\r\n{\r\n    constructor(app: App) {\r\n        super(app);\r\n    }\r\n\r\n    init() {\r\n        let progress = super.init();\r\n        if(progress) {\r\n            this._app.user = null;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport { Logout };","import { UserStyle } from \"../model/user\";\r\n\r\nclass ChangeStyleView\r\n{\r\n    private _headlineEl: any;\r\n    private _mainEl: any;\r\n    private _changeStyleFormEl: any;\r\n    private _headline: string;\r\n\r\n    constructor(){\r\n        this._headlineEl = document.querySelector(\"header h1\");\r\n        this._mainEl = document.querySelector(\"main\");\r\n\r\n        this._changeStyleFormEl = null;\r\n\r\n        this._headline = \"Change style\";\r\n    }\r\n\r\n    init(style: UserStyle) {\r\n        this._headlineEl.innerHTML = this._headline;\r\n        document.title = this._headline;\r\n        \r\n        this._mainEl.innerHTML = this._changeStyleForm(style);\r\n\r\n        this._changeStyleFormEl = document.querySelector(\"form\");\r\n    }\r\n\r\n    getForm() {\r\n        return this._changeStyleFormEl;\r\n    }\r\n\r\n    _changeStyleForm(style: UserStyle) {\r\n        return String.raw`\r\n            <form method=\"post\" action=\"\">\r\n                <label>\r\n                    Styles: <span class=\"mandatory\">*</span>\r\n                </label>\r\n                <label>\r\n                    <input class=\"radioBut\" required type=\"radio\" name=\"style\" value=\"blue\" ${style == \"blue\" ? \"checked\" : \"\"}>\r\n                    Blue style\r\n                </label>\r\n                <label>\r\n                    <input class=\"radioBut\" type=\"radio\" name=\"style\" value=\"green\" ${style == \"green\" ? \"checked\" : \"\"}>\r\n                    Green style\r\n                </label>\r\n                <input class=\"submitForm\" type=\"submit\" value=\"Change\">\r\n                <p> Fields with <span class=\"mandatory\">*</span> are mandatory. </p>\r\n            </form>\r\n        `;\r\n    }\r\n}\r\n\r\nexport { ChangeStyleView };","import { App } from \"./app\"\r\nimport { LoggedIn } from \"./loggedIn\";\r\nimport { ChangeStyleView } from \"../view/changeStyle\";\r\nimport { setStyle } from \"../view/style\";\r\n\r\nclass ChangeStyle extends LoggedIn\r\n{\r\n    private _view: ChangeStyleView;\r\n\r\n    constructor(app: App) {\r\n        super(app);\r\n        this._view = new ChangeStyleView();\r\n    }\r\n\r\n    init() {\r\n        let progress = super.init();\r\n        if(progress) {\r\n            this._view.init(this._user.style);\r\n            this._view.getForm().addEventListener(\"submit\", (e: SubmitEvent) => {e.preventDefault(); this._submitForm();});\r\n        }\r\n        return progress;\r\n    }\r\n\r\n    _submitForm() {\r\n        let form = this._view.getForm();\r\n        let formData = new FormData(form);\r\n        this._user.style = ((rawStyle)=> {\r\n            if(rawStyle != null) {\r\n                let rawStyleString = rawStyle.toString();\r\n                if(rawStyleString == \"blue\" || rawStyleString == \"green\") {\r\n                    return rawStyleString;\r\n                }\r\n            }\r\n            return \"blue\";\r\n        })(formData.get(\"style\"));\r\n        this._app.getUsers().save();\r\n        setStyle(this._user.style);\r\n    }\r\n}\r\n\r\nexport { ChangeStyle };","import { StorageObject } from \"../control/storageObject\";\r\n\r\nclass Note extends StorageObject // TODO: change visibility and mutability of attributes\r\n{\r\n    public name = \"\";\r\n    public description = \"\";\r\n\r\n    constructor() {\r\n        super(\"Note\");\r\n    }\r\n    static createNote(name: string, description: string) {\r\n        let note = new Note();\r\n        note.name = name;\r\n        note.description = description;\r\n        return note;\r\n    }\r\n\r\n    static isNameIncorrect(name: string) { // TODO: maybe replace with typesafe NoteName type\r\n        if(name.length > 100)\r\n            return \"The name is too long.\";\r\n        if(name.length < 1)\r\n            return \"The name must be at least one character.\";\r\n        return \"\";\r\n    }\r\n\r\n    static isDescriptionIncorrect(description: string) { // TODO: maybe replace with typesafe NoteDescription type\r\n        if(description.length > 20000)\r\n            return \"The description is too long.\";\r\n        return \"\";\r\n    }\r\n}\r\n\r\n\r\nexport { Note };","import { Router } from \"./router\";\r\nimport { AppStorage } from \"./appStorage\";\r\n\r\nimport { Main } from \"./main\";\r\nimport { Login } from \"./login\";\r\nimport { Register } from \"./register\";\r\nimport { Diary } from \"./diary\";\r\nimport { Notebook } from \"./notebook\";\r\nimport { Logout } from \"./logout\";\r\nimport { ChangeStyle } from \"./changeStyle\";\r\n\r\nimport { User } from \"../model/user\";\r\nimport { CustomDate } from \"../model/date\";\r\nimport { Note } from \"../model/note\";\r\nimport { DiaryNote } from \"../model/diaryNote\";\r\n\r\nclass App\r\n{\r\n    public user: User | null;\r\n    public router: Router;\r\n    private _users: AppStorage;\r\n\r\n    constructor() {\r\n        let routes = {\r\n            main: new Main(this),\r\n            login: new Login(this),\r\n            register: new Register(this),\r\n            diary: new Diary(this),\r\n            /*notebook: new Notebook(this),*/\r\n            logout: new Logout(this),\r\n            changeStyle: new ChangeStyle(this)\r\n        };\r\n        let defaultRoute = {\r\n            name: \"main\",\r\n            control: routes.main\r\n        };\r\n\r\n        this.router = new Router(routes, defaultRoute);\r\n        this.router.route();\r\n\r\n        this._users = new AppStorage(\"diary-js-users\", [User, CustomDate, Note, DiaryNote]);\r\n        this._users.load();\r\n\r\n        this.user = null;\r\n    }\r\n\r\n    getUsers() { // TODO: rethink the mutability and getter\r\n        return this._users;\r\n    }\r\n    \r\n}\r\n\r\nexport { App };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport { App } from \"./control/app\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <header>\n\t\t\t<nav>\n        <ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#main\">Main page</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#login\">Login</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#register\">Register</a>\n\t\t\t\t\t</li>\n        </ul>\n      </nav>\n\t\t\t<h1>\n\t\t\t\tDiary\n\t\t\t</h1>\n\t\t\t<div id=\"user\">\n\t\t\t</div>\n\t\t</header>\n\n\t\t<main>\n\n\t\t</main>\n\n\t\t<footer>\n\t\t</footer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nlet app = new App();\n\nreportWebVitals();"],"sourceRoot":""}